[{"C:\\Development\\three\\src\\index.tsx":"1","C:\\Development\\three\\src\\boilerplate\\reportWebVitals.ts":"2","C:\\Development\\three\\src\\App.tsx":"3","C:\\Development\\three\\src\\breathingDots\\index.ts":"4","C:\\Development\\three\\src\\breathingDots\\BreathingDots.tsx":"5","C:\\Development\\three\\src\\breathingDots\\Effects.tsx":"6","C:\\Development\\three\\src\\util\\type.ts":"7","C:\\Development\\three\\src\\controls\\Controls.tsx":"8","C:\\Development\\three\\src\\controls\\context.tsx":"9","C:\\Development\\three\\src\\controls\\ControlsProvider.tsx":"10","C:\\Development\\three\\src\\controls\\index.ts":"11","C:\\Development\\three\\src\\breathingDots\\context.tsx":"12","C:\\Development\\three\\src\\breathingDots\\BreathingDotsProvider.tsx":"13","C:\\Development\\three\\src\\breathingDots\\BreathingDotsControls.tsx":"14","C:\\Development\\three\\src\\interface\\InterfaceProvider.tsx":"15","C:\\Development\\three\\src\\interface\\context.tsx":"16","C:\\Development\\three\\src\\interface\\index.ts":"17","C:\\Development\\three\\src\\interface\\Interface.tsx":"18","C:\\Development\\three\\src\\theme.ts":"19","C:\\Development\\three\\src\\interface\\Sidebar.tsx":"20","C:\\Development\\three\\src\\breathingDots\\types.ts":"21"},{"size":513,"mtime":1608591737413,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1608322187450,"results":"24","hashOfConfig":"23"},{"size":1066,"mtime":1608656079096,"results":"25","hashOfConfig":"23"},{"size":212,"mtime":1608592252787,"results":"26","hashOfConfig":"23"},{"size":5361,"mtime":1608674354298,"results":"27","hashOfConfig":"23"},{"size":3369,"mtime":1608592295251,"results":"28","hashOfConfig":"23"},{"size":340,"mtime":1608498414609,"results":"29","hashOfConfig":"23"},{"size":199,"mtime":1608649730455,"results":"30","hashOfConfig":"23"},{"size":862,"mtime":1608656965272,"results":"31","hashOfConfig":"23"},{"size":408,"mtime":1608669656378,"results":"32","hashOfConfig":"23"},{"size":143,"mtime":1608500928673,"results":"33","hashOfConfig":"23"},{"size":1196,"mtime":1608670164534,"results":"34","hashOfConfig":"23"},{"size":1056,"mtime":1608672346609,"results":"35","hashOfConfig":"23"},{"size":3795,"mtime":1608677302554,"results":"36","hashOfConfig":"23"},{"size":391,"mtime":1608649696412,"results":"37","hashOfConfig":"23"},{"size":846,"mtime":1608649687514,"results":"38","hashOfConfig":"23"},{"size":147,"mtime":1608649868825,"results":"39","hashOfConfig":"23"},{"size":2011,"mtime":1608670934668,"results":"40","hashOfConfig":"23"},{"size":905,"mtime":1608654371762,"results":"41","hashOfConfig":"23"},{"size":3280,"mtime":1608674497758,"results":"42","hashOfConfig":"23"},{"size":247,"mtime":1608671794818,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"15j5uu3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Development\\three\\src\\index.tsx",[],["88","89"],"C:\\Development\\three\\src\\boilerplate\\reportWebVitals.ts",[],"C:\\Development\\three\\src\\App.tsx",[],"C:\\Development\\three\\src\\breathingDots\\index.ts",[],"C:\\Development\\three\\src\\breathingDots\\BreathingDots.tsx",[],"C:\\Development\\three\\src\\breathingDots\\Effects.tsx",[],"C:\\Development\\three\\src\\util\\type.ts",[],"C:\\Development\\three\\src\\controls\\Controls.tsx",[],"C:\\Development\\three\\src\\controls\\context.tsx",[],"C:\\Development\\three\\src\\controls\\ControlsProvider.tsx",[],"C:\\Development\\three\\src\\controls\\index.ts",[],"C:\\Development\\three\\src\\breathingDots\\context.tsx",[],"C:\\Development\\three\\src\\breathingDots\\BreathingDotsProvider.tsx",[],"C:\\Development\\three\\src\\breathingDots\\BreathingDotsControls.tsx",["90","91"],"C:\\Development\\three\\src\\interface\\InterfaceProvider.tsx",[],"C:\\Development\\three\\src\\interface\\context.tsx",[],"C:\\Development\\three\\src\\interface\\index.ts",[],"C:\\Development\\three\\src\\interface\\Interface.tsx",[],"C:\\Development\\three\\src\\theme.ts",[],"C:\\Development\\three\\src\\interface\\Sidebar.tsx",["92","93"],"import React, { FC, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport {\n  makeStyles,\n  Drawer,\n  Theme,\n  IconButton,\n  useTheme,\n  Divider,\n  MenuList,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Box,\n} from '@material-ui/core';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport { BreathingDotsControls } from '../breathingDots';\n\ninterface SidebarStyleProps {\n  open: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: ({ open }: SidebarStyleProps): number =>\n      open ? theme.options.drawerWidth : 0,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: 0,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0),\n    // needed for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  menuRoot: { padding: 0 },\n  menuItem: { paddingLeft: theme.spacing(1.5) },\n}));\n\ninterface SidebarProps extends SidebarStyleProps {\n  onClose: () => void;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ onClose, open }) => {\n  const [selected, setSelected] = useState();\n  const classes = useStyles({ open });\n  const theme = useTheme();\n  const { location: { pathname } } = useHistory();\n  const breathingDotsSelected = pathname.startsWith('/breathing_dots');\n  console.log(breathingDotsSelected);\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      className={clsx(\n        classes.root,\n        open ? classes.drawerOpen : classes.drawerClose\n      )}\n      classes={{\n        paper: clsx(open ? classes.drawerOpen : classes.drawerClose),\n      }}\n      onClose={onClose}\n      open={open}\n      variant=\"permanent\"\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={onClose}>\n          {theme.direction === 'rtl' ? (\n            <ChevronRightIcon />\n          ) : (\n              <ChevronLeftIcon />\n            )}\n        </IconButton>\n      </div>\n      <Divider />\n      <MenuList className={classes.menuRoot}>\n        <MenuItem className={classes.menuItem} component={Link} to=\"/breathing_dots\" selected={pathname.startsWith('/breathing_dots/')}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Breathing Dots</ListItemText>\n        </MenuItem>\n        <Divider />\n        <MenuItem className={classes.menuItem} component={Link} to=\"/test\">\n          <ListItemIcon>\n            <MenuBookIcon />\n          </ListItemIcon>\n          <ListItemText></ListItemText>\n        </MenuItem>\n      </MenuList>\n      <Box flexGrow={1} />\n      <Divider />\n      {breathingDotsSelected && <BreathingDotsControls />}\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n","C:\\Development\\three\\src\\breathingDots\\types.ts",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":23,"nodeType":"100","messageId":"101","endLine":2,"endColumn":34},{"ruleId":"98","severity":1,"message":"102","line":2,"column":36,"nodeType":"100","messageId":"101","endLine":2,"endColumn":46},{"ruleId":"98","severity":1,"message":"103","line":67,"column":10,"nodeType":"100","messageId":"101","endLine":67,"endColumn":18},{"ruleId":"98","severity":1,"message":"104","line":67,"column":20,"nodeType":"100","messageId":"101","endLine":67,"endColumn":31},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]